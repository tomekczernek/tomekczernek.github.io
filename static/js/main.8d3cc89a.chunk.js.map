{"version":3,"sources":["api/index.js","components/Map/Map.js","components/Information/Information.js","components/StorageBox/StorageItem.js","components/StorageBox/StorageBox.js","components/Header/Header.js","components/MessageBox/MessageBox.js","App.js","reportWebVitals.js","index.js"],"names":["request","method","endpoint","data","axios","url","process","get","post","patch","delete","DefaultIcon","L","icon","Icon","Default","prototype","options","iconUrl","iconRetinaUrl","iconRetina","shadowUrl","iconShadow","Marker","Map","latitude","longitude","city","MapContainer","center","zoom","scrollWheelZoom","style","width","height","TileLayer","attribution","position","Popup","Information","continent","country","ip","flag","userLocation","classes","makeStyles","theme","root","appInfoBold","fontWeight","appInfoIp","padding","appInfoFlag","border","appInfoSmall","fontSize","useStyles","Accordion","className","Typography","src","alt","AccordionSummary","expandIcon","aria-controls","AccordionDetails","StorageItem","StorageBox","arrayOfSearchIPValue","appHistoryBold","appHistoryTitle","map","item","index","Header","flexGrow","appBar","alignItems","backgroundColor","appBarIcon","marginRight","appBarTitle","AppBar","Toolbar","variant","MessageBox","messageBoxOpen","message","messageBoxClose","maxWidth","margin","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","action","IconButton","size","aria-label","color","onClick","App","useState","userIPData","setUserIPData","searchIPData","setSearchIPData","searchIPValue","setSearchIPValue","setArrayOfSearchIPValue","setMessageBoxOpen","messageBoxText","setMessageBoxText","useEffect","api","then","response","console","log","appGrid","marginTop","appPaper","appSearchInput","appSearchBtn","Grid","container","xs","sm","md","Paper","elevation","continent_name","country_name","location","country_flag","TextField","label","value","onChange","event","target","Button","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d3cc89a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nfunction request(method, endpoint, data = null){\r\n\r\n    return axios({\r\n        method,\r\n        url: `${process.env.REACT_APP_URL}${endpoint}${'?access_key='}${process.env.REACT_APP_KEY}`,\r\n        data\r\n    });\r\n}\r\n\r\nfunction get(endpoint){\r\n    return request('GET', endpoint);\r\n}\r\n\r\nfunction post(endpoint, data){\r\n    return request('POST', endpoint, data);\r\n}\r\n\r\nfunction patch(endpoint, data){\r\n    return request('PATCH', endpoint, data);\r\n}\r\n\r\nfunction _delete(endpoint){\r\n    return request('DELETE', endpoint);\r\n}\r\n\r\nexport default {\r\n    get,\r\n    post,\r\n    patch,\r\n    delete: _delete\r\n};","import { Fragment } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\nimport iconRetina from \"leaflet/dist/images/marker-icon-2x.png\";\r\nlet DefaultIcon = L.icon({\r\n  ...L.Icon.Default.prototype.options,\r\n  iconUrl: icon,\r\n  iconRetinaUrl: iconRetina,\r\n  shadowUrl: iconShadow,\r\n});\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nfunction Map({ latitude, longitude, city }) {\r\n  return (\r\n    <Fragment>\r\n      {latitude && longitude ? (\r\n        <MapContainer\r\n          center={[latitude, longitude]}\r\n          zoom={10}\r\n          scrollWheelZoom={true}\r\n          style={{ width: \"100%\", height: \"300px\" }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker position={[latitude, longitude]}>\r\n            <Popup>{`${city}. Are you here?`}</Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMap.propTypes = {\r\n  latitude: propTypes.number.isRequired,\r\n  longitude: propTypes.number.isRequired,\r\n};\r\n\r\nexport default Map;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nfunction Information({\r\n  latitude,\r\n  longitude,\r\n  city,\r\n  continent,\r\n  country,\r\n  ip,\r\n  flag,\r\n  userLocation,\r\n}) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    appInfoBold: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    appInfoIp: {\r\n      padding: \"12px 16px 12px 16px\",\r\n    },\r\n    appInfoFlag: {\r\n      width: 25,\r\n      border: \"solid 1px #ccc\"\r\n    },\r\n    appInfoSmall: {\r\n      fontWeight: \"bold\",\r\n      \"@media (max-width: 360px)\": {\r\n        fontSize: \"0.8rem\"\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {latitude && longitude ? (\r\n        <div>\r\n          <Accordion>\r\n            <div className={classes.appInfoIp}>\r\n              <Typography>\r\n                {userLocation ? (\r\n                  <span>Your IP address:</span>\r\n                ) : (\r\n                  <span>IP address:</span>\r\n                )}\r\n                {\" \"}\r\n                <span className={classes.appInfoSmall}>{ip}</span>\r\n                {\" \"}\r\n                <img\r\n                  className={classes.appInfoFlag}\r\n                  src={flag}\r\n                  alt={`Flag of ${country}`}\r\n                />\r\n              </Typography>\r\n            </div>\r\n          </Accordion>\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n            >\r\n              <Typography>Details</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                Latitude:{\" \"}\r\n                <span className={classes.appInfoBold}>{latitude}</span>\r\n                <br />\r\n                Longitude:{\" \"}\r\n                <span className={classes.appInfoBold}>{longitude}</span>\r\n                <br />\r\n                Location:{\" \"}\r\n                <span\r\n                  className={classes.appInfoBold}\r\n                >{`${continent} / ${country} / ${city}`}</span>\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Information;\r\n","import Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nfunction StorageItem({ ip, latitude, longitude }) {\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n      >\r\n        <Typography>{ip}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography>\r\n          Latitude: <span>{latitude}</span>\r\n          <br />\r\n          Longitude: <span>{longitude}</span>\r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default StorageItem;\r\n","import { Fragment } from \"react\";\r\n\r\nimport StorageItem from \"./StorageItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction StorageBox({ arrayOfSearchIPValue }) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    appHistoryBold: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    appHistoryTitle: {\r\n      padding: \"12px 16px 12px 16px\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Accordion>\r\n        <div className={classes.appHistoryTitle}>\r\n          <Typography className={classes.appHistoryBold}>\r\n            Search history\r\n          </Typography>\r\n        </div>\r\n      </Accordion>\r\n      {arrayOfSearchIPValue.map((item, index) => (\r\n        <StorageItem\r\n          key={`storageItem-${index}`}\r\n          ip={item.ip}\r\n          latitude={item.latitude}\r\n          longitude={item.longitude}\r\n        ></StorageItem>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default StorageBox;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NotListedLocationIcon from \"@material-ui/icons/NotListedLocation\";\r\n\r\nfunction Header() {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    appBar: {\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#3f51b5\",\r\n    },\r\n    appBarIcon: {\r\n      marginRight: \"1rem\",\r\n    },\r\n    appBarTitle: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <NotListedLocationIcon\r\n          fontSize=\"large\"\r\n          className={classes.appBarIcon}\r\n        />\r\n        <Typography variant=\"h5\" className={classes.appBarTitle}>\r\n          map-ip-app\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Fragment } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction MessageBox({ messageBoxOpen, message, messageBoxClose }) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"90%\",\r\n      maxWidth: \"400px\",\r\n      margin: \"0 auto\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar\r\n      className={classes.root}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"center\",\r\n      }}\r\n      autoHideDuration={5000}\r\n      open={messageBoxOpen}\r\n      message={message}\r\n      onClose={messageBoxClose}\r\n      action={\r\n        <Fragment>\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={messageBoxClose}\r\n          >\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default MessageBox;\r\n","import { useEffect, useState } from \"react\";\nimport api from \"./api\";\n\nimport Map from \"./components/Map\";\nimport Information from \"./components/Information\";\nimport StorageBox from \"./components/StorageBox\";\nimport Header from \"./components/Header\";\nimport MessageBox from \"./components/MessageBox\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction App() {\n  const [userIPData, setUserIPData] = useState(null);\n  const [searchIPData, setSearchIPData] = useState(null);\n  const [searchIPValue, setSearchIPValue] = useState(\"\");\n  const [arrayOfSearchIPValue, setArrayOfSearchIPValue] = useState([]);\n  const [messageBoxOpen, setMessageBoxOpen] = useState(false);\n  const [messageBoxText, setMessageBoxText] = useState(\"\");\n\n  useEffect(() => {\n    api.get(\"check\").then((response) => {\n      console.log(response);\n      setUserIPData(response.data);\n    });\n  }, []);\n\n  const handleIPValueChange = (event) => {\n    setSearchIPValue(event.target.value);\n  };\n\n  const handleSearchIpSubmit = (event) => {\n    event.preventDefault();\n    if (searchIPValue) {\n      api.get(searchIPValue).then((response) => {\n        setSearchIPData(response.data);\n        if (!response.data.latitude || !response.data.longitude) {\n          setMessageBoxText(\"No results for the entered value\");\n          setMessageBoxOpen(true);\n        }\n        setArrayOfSearchIPValue([\n          ...arrayOfSearchIPValue,\n          {\n            ip: searchIPValue,\n            latitude: response.data.latitude,\n            longitude: response.data.longitude,\n          },\n        ]);\n        setSearchIPValue(\"\");\n      });\n    } else {\n      setMessageBoxText(\"Enter value\");\n      setMessageBoxOpen(true);\n    }\n  };\n\n  const handleMessageBoxClose = () => {\n    setMessageBoxOpen(false);\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    appGrid: {\n      marginTop: \"5rem\",\n    },\n    appPaper: {\n      margin: \"0.75rem\",\n    },\n    appSearchInput: {\n      width: \"100%\",\n    },\n    appSearchBtn: {\n      width: \"100%\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Grid container className={classes.appGrid}>\n        <Grid container item xs={12} sm={12} md={9}>\n          <Grid item xs={12} sm={12} md={6}>\n            <Paper elevation={4} className={classes.appPaper}>\n              {userIPData && (\n                <Map\n                  latitude={userIPData.latitude}\n                  longitude={userIPData.longitude}\n                  city={userIPData.city}\n                />\n              )}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6}>\n            <Paper elevation={4} className={classes.appPaper}>\n              {userIPData && (\n                <Information\n                  latitude={userIPData.latitude}\n                  longitude={userIPData.longitude}\n                  city={userIPData.city}\n                  continent={userIPData.continent_name}\n                  country={userIPData.country_name}\n                  ip={userIPData.ip}\n                  flag={userIPData.location.country_flag}\n                  userLocation={true}\n                />\n              )}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={9}>\n            <Paper elevation={4} className={classes.appPaper}>\n              <TextField\n                className={classes.appSearchInput}\n                label=\"Enter IP or URL\"\n                variant=\"outlined\"\n                size=\"small\"\n                value={searchIPValue}\n                onChange={handleIPValueChange}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Paper elevation={4} className={classes.appPaper}>\n              <Button\n                className={classes.appSearchBtn}\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                onClick={handleSearchIpSubmit}\n              >\n                Search\n              </Button>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6}>\n            <Paper elevation={4} className={classes.appPaper}>\n              {searchIPData && (\n                <Map\n                  latitude={searchIPData.latitude}\n                  longitude={searchIPData.longitude}\n                  city={searchIPData.city}\n                />\n              )}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={12} md={6}>\n            <Paper elevation={4} className={classes.appPaper}>\n              {searchIPData && (\n                <Information\n                  latitude={searchIPData.latitude}\n                  longitude={searchIPData.longitude}\n                  city={searchIPData.city}\n                  continent={searchIPData.continent_name}\n                  country={searchIPData.country_name}\n                  ip={searchIPData.ip}\n                  flag={searchIPData.location.country_flag}\n                  userLocation={false}\n                />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n        <Grid container item xs={12} sm={12} md={3}>\n          <Grid item xs={12}>\n            <Paper elevation={4} className={classes.appPaper}>\n              <StorageBox arrayOfSearchIPValue={arrayOfSearchIPValue} />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <MessageBox\n        messageBoxOpen={messageBoxOpen}\n        message={messageBoxText}\n        messageBoxClose={handleMessageBoxClose}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}